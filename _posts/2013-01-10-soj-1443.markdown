---
author: admin
comments: true
date: 2013-01-10 05:25:11+00:00
layout: post
slug: soj-1443
title: soj 1443. Printer Queue
wordpress_id: 731
categories:
- soj
---

来源：http://soj.me/1443







### 题目描述


The only printer in the computer science students' union is experiencing an extremely heavy workload. Sometimes there are a hundred jobs in the printer queue and you may have to wait for hours to get a single page of output.
Because some jobs are more important than others, the Hacker General has invented and implemented a simple priority system for the print job queue. Now, each job is assigned a priority between 1 and 9 (with 9 being the highest priority,
and 1 being the lowest), and the printer operates as follows.




	
  * The first job J in queue is taken from the queue.

	
  * If there is some job in the queue with a higher priority than job J, thenmove J to the end of the queue without printing it.

	
  * Otherwise, print job J (and do not put it back in the queue).


In this way, all those importantmuffin recipes that the Hacker General is printing get printed very quickly. Of course, those annoying term papers that others are printing may have to wait for quite some time to get printed, but that's life.

Your problem with the new policy is that it has become quite tricky to determine when your print job will actually be completed. You decide to write a program to figure this out. The program will be given the current queue (as a list of priorities) as well as the position of your job in the queue, and must then calculate how long it will take until your job is printed, assuming that no additional jobs will be added to the queue. To simplifymatters, we assume that printing a job always takes exactly one minute, and that adding and removing jobs from the queue is instantaneous.


### 输入格式


One line with a positive integer: the number of test cases (at most 100). Then for each test case:



	
  * One line with two integers n and m, where n is the number of jobs in the queue (1 ≤ n ≤ 100) and m is the position of your job (0 ≤ m ≤ n −1). The first position in the queue is number 0, the second is number 1, and so on.

	
  * One linewith n integers in the range 1 to 9, giving the priorities of the jobs in the queue. The first integer gives the priority of the first job, the second integer the priority of the second job, and so on.




### 分析


题目是说一个打印队列，每个任务都有1-9的优先级，必须要按照优先级的高低完成打印任务，如果某个任务不是最高优先级的，则要移到队列的最后边。输出指定任务打印完成所需要的时间。


    #include <iostream>
    #include <vector>
    #include <map>
    #include <queue>
    #include <stack>
    using namespace std;

    pair<int,int> findMax(const queue<pair<int,int> > &s)
    {
        queue<pair <int,int> > a=s;
        pair<int,int> max = a.front();
        while(!a.empty())
        {
         if(a.front().second > max.second)
            max = a.front();
        a.pop();
    }
    return max;
    }

    int main(){
        int t;
        cin >> t;
        while(t--)
        {
            int num,my;
            cin >> num >> my;
            queue<pair<int,int> > printQueue;
            for (int i = 0; i < num; ++i)
            {
                int temp;
                cin >> temp;
                printQueue.push(make_pair(i,temp));
            }

            int usedTime = 0;
            while(!printQueue.empty())
            {
                if(findMax(printQueue).second == printQueue.front().second)
                {
                    usedTime++;
                    if (printQueue.front().first == my)
                        break;
                    else
                        printQueue.pop();
                }
                else
                {
                    pair <int ,int> temp;
                    temp = printQueue.front();
                    printQueue.pop();
                    printQueue.push(temp);
                }
            }
            cout <<usedTime<<endl;
        }
    }

